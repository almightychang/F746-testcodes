ARM GAS  /tmp/ccDZZQGG.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.Error_Handler,"ax",%progbits
  20              		.align	1
  21              		.global	Error_Handler
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	Error_Handler:
  27              	.LFB143:
  28              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****  ******************************************************************************
   4:Core/Src/main.c ****  * @file           : main.c
   5:Core/Src/main.c ****  * @brief          : Main program body
   6:Core/Src/main.c ****  ******************************************************************************
   7:Core/Src/main.c ****  * @attention
   8:Core/Src/main.c ****  *
   9:Core/Src/main.c ****  * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****  * All rights reserved.
  11:Core/Src/main.c ****  *
  12:Core/Src/main.c ****  * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****  * in the root directory of this software component.
  14:Core/Src/main.c ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****  *
  16:Core/Src/main.c ****  ******************************************************************************
  17:Core/Src/main.c ****  */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "tim.h"
  22:Core/Src/main.c **** #include "usart.h"
  23:Core/Src/main.c **** #include "usb_otg.h"
  24:Core/Src/main.c **** #include "gpio.h"
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  27:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  28:Core/Src/main.c **** #include "sys/queue.h"
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END Includes */
ARM GAS  /tmp/ccDZZQGG.s 			page 2


  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  34:Core/Src/main.c **** struct foooo
  35:Core/Src/main.c **** {
  36:Core/Src/main.c ****     int id;
  37:Core/Src/main.c ****     STAILQ_ENTRY(foooo) stailq;
  38:Core/Src/main.c **** };
  39:Core/Src/main.c **** STAILQ_HEAD(fooooq, foooo);
  40:Core/Src/main.c **** /* USER CODE END PTD */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  43:Core/Src/main.c **** /* USER CODE BEGIN PD */
  44:Core/Src/main.c **** /* USER CODE END PD */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  47:Core/Src/main.c **** /* USER CODE BEGIN PM */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* USER CODE END PM */
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* USER CODE BEGIN PV */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* USER CODE END PV */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  58:Core/Src/main.c **** void SystemClock_Config(void);
  59:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** /* USER CODE END PFP */
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  64:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** /* USER CODE END 0 */
  67:Core/Src/main.c **** 
  68:Core/Src/main.c **** /**
  69:Core/Src/main.c ****  * @brief  The application entry point.
  70:Core/Src/main.c ****  * @retval int
  71:Core/Src/main.c ****  */
  72:Core/Src/main.c **** int
  73:Core/Src/main.c **** main(void)
  74:Core/Src/main.c **** {
  75:Core/Src/main.c ****     /* USER CODE BEGIN 1 */
  76:Core/Src/main.c **** 
  77:Core/Src/main.c ****     /* USER CODE END 1 */
  78:Core/Src/main.c **** 
  79:Core/Src/main.c ****     /* MCU
  80:Core/Src/main.c ****      * Configuration--------------------------------------------------------*/
  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****     /* Reset of all peripherals, Initializes the Flash interface and the
  83:Core/Src/main.c ****      * Systick. */
  84:Core/Src/main.c ****     HAL_Init();
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****     /* USER CODE BEGIN Init */
  87:Core/Src/main.c **** 
ARM GAS  /tmp/ccDZZQGG.s 			page 3


  88:Core/Src/main.c ****     /* USER CODE END Init */
  89:Core/Src/main.c **** 
  90:Core/Src/main.c ****     /* Configure the system clock */
  91:Core/Src/main.c ****     SystemClock_Config();
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****     /* USER CODE BEGIN SysInit */
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****     /* USER CODE END SysInit */
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****     /* Initialize all configured peripherals */
  98:Core/Src/main.c ****     MX_GPIO_Init();
  99:Core/Src/main.c ****     MX_USART3_UART_Init();
 100:Core/Src/main.c ****     MX_USB_OTG_FS_PCD_Init();
 101:Core/Src/main.c ****     MX_TIM1_Init();
 102:Core/Src/main.c ****     /* USER CODE BEGIN 2 */
 103:Core/Src/main.c **** 
 104:Core/Src/main.c ****     struct fooooq q;
 105:Core/Src/main.c ****     STAILQ_INIT(&q);
 106:Core/Src/main.c ****     struct foooo data[3] = { { .id = 1 }, { .id = 2 }, { .id = 3 } };
 107:Core/Src/main.c **** 
 108:Core/Src/main.c ****     STAILQ_INSERT_TAIL(&q, &data[0], stailq);
 109:Core/Src/main.c ****     STAILQ_INSERT_TAIL(&q, &data[1], stailq);
 110:Core/Src/main.c ****     STAILQ_INSERT_TAIL(&q, &data[2], stailq);
 111:Core/Src/main.c **** 
 112:Core/Src/main.c ****     struct foooo *p;
 113:Core/Src/main.c ****     char          buf[100];
 114:Core/Src/main.c **** 
 115:Core/Src/main.c ****     STAILQ_FOREACH(p, &q, stailq)
 116:Core/Src/main.c ****     {
 117:Core/Src/main.c ****         sprintf(buf, "%d\n", p->id);
 118:Core/Src/main.c ****         HAL_UART_Transmit(&huart3, buf, strlen(buf), 10);
 119:Core/Src/main.c ****     }
 120:Core/Src/main.c ****     /* USER CODE END 2 */
 121:Core/Src/main.c **** 
 122:Core/Src/main.c ****     /* Infinite loop */
 123:Core/Src/main.c ****     /* USER CODE BEGIN WHILE */
 124:Core/Src/main.c ****     while(1)
 125:Core/Src/main.c ****     {
 126:Core/Src/main.c ****         HAL_Delay(100);
 127:Core/Src/main.c ****         HAL_GPIO_TogglePin(LD2_GPIO_Port, LD2_Pin);
 128:Core/Src/main.c ****         /* USER CODE END WHILE */
 129:Core/Src/main.c **** 
 130:Core/Src/main.c ****         /* USER CODE BEGIN 3 */
 131:Core/Src/main.c ****     }
 132:Core/Src/main.c ****     /* USER CODE END 3 */
 133:Core/Src/main.c **** }
 134:Core/Src/main.c **** 
 135:Core/Src/main.c **** /**
 136:Core/Src/main.c ****  * @brief System Clock Configuration
 137:Core/Src/main.c ****  * @retval None
 138:Core/Src/main.c ****  */
 139:Core/Src/main.c **** void
 140:Core/Src/main.c **** SystemClock_Config(void)
 141:Core/Src/main.c **** {
 142:Core/Src/main.c ****     RCC_OscInitTypeDef RCC_OscInitStruct = { 0 };
 143:Core/Src/main.c ****     RCC_ClkInitTypeDef RCC_ClkInitStruct = { 0 };
 144:Core/Src/main.c **** 
ARM GAS  /tmp/ccDZZQGG.s 			page 4


 145:Core/Src/main.c ****     /** Configure LSE Drive Capability
 146:Core/Src/main.c ****      */
 147:Core/Src/main.c ****     HAL_PWR_EnableBkUpAccess();
 148:Core/Src/main.c **** 
 149:Core/Src/main.c ****     /** Configure the main internal regulator output voltage
 150:Core/Src/main.c ****      */
 151:Core/Src/main.c ****     __HAL_RCC_PWR_CLK_ENABLE();
 152:Core/Src/main.c ****     __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 153:Core/Src/main.c **** 
 154:Core/Src/main.c ****     /** Initializes the RCC Oscillators according to the specified parameters
 155:Core/Src/main.c ****      * in the RCC_OscInitTypeDef structure.
 156:Core/Src/main.c ****      */
 157:Core/Src/main.c ****     RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 158:Core/Src/main.c ****     RCC_OscInitStruct.HSEState       = RCC_HSE_BYPASS;
 159:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLState   = RCC_PLL_ON;
 160:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLSource  = RCC_PLLSOURCE_HSE;
 161:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLM       = 4;
 162:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLN       = 72;
 163:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLP       = RCC_PLLP_DIV2;
 164:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLQ       = 3;
 165:Core/Src/main.c ****     if(HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) { Error_Handler(); }
 166:Core/Src/main.c **** 
 167:Core/Src/main.c ****     /** Initializes the CPU, AHB and APB buses clocks
 168:Core/Src/main.c ****      */
 169:Core/Src/main.c ****     RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK |
 170:Core/Src/main.c ****                                   RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 171:Core/Src/main.c ****     RCC_ClkInitStruct.SYSCLKSource   = RCC_SYSCLKSOURCE_PLLCLK;
 172:Core/Src/main.c ****     RCC_ClkInitStruct.AHBCLKDivider  = RCC_SYSCLK_DIV1;
 173:Core/Src/main.c ****     RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 174:Core/Src/main.c ****     RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 175:Core/Src/main.c **** 
 176:Core/Src/main.c ****     if(HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 177:Core/Src/main.c ****     {
 178:Core/Src/main.c ****         Error_Handler();
 179:Core/Src/main.c ****     }
 180:Core/Src/main.c **** }
 181:Core/Src/main.c **** 
 182:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 183:Core/Src/main.c **** 
 184:Core/Src/main.c **** /* USER CODE END 4 */
 185:Core/Src/main.c **** 
 186:Core/Src/main.c **** /**
 187:Core/Src/main.c ****  * @brief  This function is executed in case of error occurrence.
 188:Core/Src/main.c ****  * @retval None
 189:Core/Src/main.c ****  */
 190:Core/Src/main.c **** void
 191:Core/Src/main.c **** Error_Handler(void)
 192:Core/Src/main.c **** {
  29              		.loc 1 192 1 view -0
  30              		.cfi_startproc
  31              		@ Volatile: function does not return.
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
 193:Core/Src/main.c ****     /* USER CODE BEGIN Error_Handler_Debug */
 194:Core/Src/main.c ****     /* User can add his own implementation to report the HAL error return state
 195:Core/Src/main.c ****      */
ARM GAS  /tmp/ccDZZQGG.s 			page 5


 196:Core/Src/main.c ****     __disable_irq();
  35              		.loc 1 196 5 view .LVU1
  36              	.LBB4:
  37              	.LBI4:
  38              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
ARM GAS  /tmp/ccDZZQGG.s 			page 6


  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccDZZQGG.s 			page 7


 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
  39              		.loc 2 140 27 view .LVU2
  40              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  41              		.loc 2 142 3 view .LVU3
  42              		.syntax unified
  43              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  44 0000 72B6     		cpsid i
  45              	@ 0 "" 2
  46              		.thumb
  47              		.syntax unified
  48              	.L2:
  49              	.LBE5:
  50              	.LBE4:
 197:Core/Src/main.c ****     while(1) {}
  51              		.loc 1 197 5 discriminator 1 view .LVU4
  52              		.loc 1 197 15 discriminator 1 view .LVU5
  53              		.loc 1 197 10 discriminator 1 view .LVU6
  54 0002 FEE7     		b	.L2
  55              		.cfi_endproc
  56              	.LFE143:
  58              		.section	.text.SystemClock_Config,"ax",%progbits
  59              		.align	1
  60              		.global	SystemClock_Config
  61              		.syntax unified
  62              		.thumb
ARM GAS  /tmp/ccDZZQGG.s 			page 8


  63              		.thumb_func
  65              	SystemClock_Config:
  66              	.LFB142:
 141:Core/Src/main.c ****     RCC_OscInitTypeDef RCC_OscInitStruct = { 0 };
  67              		.loc 1 141 1 view -0
  68              		.cfi_startproc
  69              		@ args = 0, pretend = 0, frame = 80
  70              		@ frame_needed = 0, uses_anonymous_args = 0
  71 0000 00B5     		push	{lr}
  72              	.LCFI0:
  73              		.cfi_def_cfa_offset 4
  74              		.cfi_offset 14, -4
  75 0002 95B0     		sub	sp, sp, #84
  76              	.LCFI1:
  77              		.cfi_def_cfa_offset 88
 142:Core/Src/main.c ****     RCC_ClkInitTypeDef RCC_ClkInitStruct = { 0 };
  78              		.loc 1 142 5 view .LVU8
 142:Core/Src/main.c ****     RCC_ClkInitTypeDef RCC_ClkInitStruct = { 0 };
  79              		.loc 1 142 24 is_stmt 0 view .LVU9
  80 0004 3022     		movs	r2, #48
  81 0006 0021     		movs	r1, #0
  82 0008 08A8     		add	r0, sp, #32
  83 000a FFF7FEFF 		bl	memset
  84              	.LVL0:
 143:Core/Src/main.c **** 
  85              		.loc 1 143 5 is_stmt 1 view .LVU10
 143:Core/Src/main.c **** 
  86              		.loc 1 143 24 is_stmt 0 view .LVU11
  87 000e 0023     		movs	r3, #0
  88 0010 0393     		str	r3, [sp, #12]
  89 0012 0493     		str	r3, [sp, #16]
  90 0014 0593     		str	r3, [sp, #20]
  91 0016 0693     		str	r3, [sp, #24]
  92 0018 0793     		str	r3, [sp, #28]
 147:Core/Src/main.c **** 
  93              		.loc 1 147 5 is_stmt 1 view .LVU12
  94 001a FFF7FEFF 		bl	HAL_PWR_EnableBkUpAccess
  95              	.LVL1:
 151:Core/Src/main.c ****     __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
  96              		.loc 1 151 5 view .LVU13
  97              	.LBB6:
 151:Core/Src/main.c ****     __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
  98              		.loc 1 151 5 view .LVU14
 151:Core/Src/main.c ****     __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
  99              		.loc 1 151 5 view .LVU15
 100 001e 204B     		ldr	r3, .L9
 101 0020 1A6C     		ldr	r2, [r3, #64]
 102 0022 42F08052 		orr	r2, r2, #268435456
 103 0026 1A64     		str	r2, [r3, #64]
 151:Core/Src/main.c ****     __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 104              		.loc 1 151 5 view .LVU16
 105 0028 1B6C     		ldr	r3, [r3, #64]
 106 002a 03F08053 		and	r3, r3, #268435456
 107 002e 0193     		str	r3, [sp, #4]
 151:Core/Src/main.c ****     __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 108              		.loc 1 151 5 view .LVU17
 109 0030 019B     		ldr	r3, [sp, #4]
ARM GAS  /tmp/ccDZZQGG.s 			page 9


 110              	.LBE6:
 151:Core/Src/main.c ****     __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 111              		.loc 1 151 5 view .LVU18
 152:Core/Src/main.c **** 
 112              		.loc 1 152 5 view .LVU19
 113              	.LBB7:
 152:Core/Src/main.c **** 
 114              		.loc 1 152 5 view .LVU20
 152:Core/Src/main.c **** 
 115              		.loc 1 152 5 view .LVU21
 116 0032 1C4A     		ldr	r2, .L9+4
 117 0034 1368     		ldr	r3, [r2]
 118 0036 23F44043 		bic	r3, r3, #49152
 119 003a 43F48043 		orr	r3, r3, #16384
 120 003e 1360     		str	r3, [r2]
 152:Core/Src/main.c **** 
 121              		.loc 1 152 5 view .LVU22
 122 0040 1368     		ldr	r3, [r2]
 123 0042 03F44043 		and	r3, r3, #49152
 124 0046 0293     		str	r3, [sp, #8]
 152:Core/Src/main.c **** 
 125              		.loc 1 152 5 view .LVU23
 126 0048 029B     		ldr	r3, [sp, #8]
 127              	.LBE7:
 152:Core/Src/main.c **** 
 128              		.loc 1 152 5 view .LVU24
 157:Core/Src/main.c ****     RCC_OscInitStruct.HSEState       = RCC_HSE_BYPASS;
 129              		.loc 1 157 5 view .LVU25
 157:Core/Src/main.c ****     RCC_OscInitStruct.HSEState       = RCC_HSE_BYPASS;
 130              		.loc 1 157 38 is_stmt 0 view .LVU26
 131 004a 0123     		movs	r3, #1
 132 004c 0893     		str	r3, [sp, #32]
 158:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLState   = RCC_PLL_ON;
 133              		.loc 1 158 5 is_stmt 1 view .LVU27
 158:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLState   = RCC_PLL_ON;
 134              		.loc 1 158 38 is_stmt 0 view .LVU28
 135 004e 4FF4A023 		mov	r3, #327680
 136 0052 0993     		str	r3, [sp, #36]
 159:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLSource  = RCC_PLLSOURCE_HSE;
 137              		.loc 1 159 5 is_stmt 1 view .LVU29
 159:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLSource  = RCC_PLLSOURCE_HSE;
 138              		.loc 1 159 38 is_stmt 0 view .LVU30
 139 0054 0223     		movs	r3, #2
 140 0056 0E93     		str	r3, [sp, #56]
 160:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLM       = 4;
 141              		.loc 1 160 5 is_stmt 1 view .LVU31
 160:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLM       = 4;
 142              		.loc 1 160 38 is_stmt 0 view .LVU32
 143 0058 4FF48002 		mov	r2, #4194304
 144 005c 0F92     		str	r2, [sp, #60]
 161:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLN       = 72;
 145              		.loc 1 161 5 is_stmt 1 view .LVU33
 161:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLN       = 72;
 146              		.loc 1 161 38 is_stmt 0 view .LVU34
 147 005e 0422     		movs	r2, #4
 148 0060 1092     		str	r2, [sp, #64]
 162:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLP       = RCC_PLLP_DIV2;
ARM GAS  /tmp/ccDZZQGG.s 			page 10


 149              		.loc 1 162 5 is_stmt 1 view .LVU35
 162:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLP       = RCC_PLLP_DIV2;
 150              		.loc 1 162 38 is_stmt 0 view .LVU36
 151 0062 4822     		movs	r2, #72
 152 0064 1192     		str	r2, [sp, #68]
 163:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLQ       = 3;
 153              		.loc 1 163 5 is_stmt 1 view .LVU37
 163:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLQ       = 3;
 154              		.loc 1 163 38 is_stmt 0 view .LVU38
 155 0066 1293     		str	r3, [sp, #72]
 164:Core/Src/main.c ****     if(HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) { Error_Handler(); }
 156              		.loc 1 164 5 is_stmt 1 view .LVU39
 164:Core/Src/main.c ****     if(HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) { Error_Handler(); }
 157              		.loc 1 164 38 is_stmt 0 view .LVU40
 158 0068 0323     		movs	r3, #3
 159 006a 1393     		str	r3, [sp, #76]
 165:Core/Src/main.c **** 
 160              		.loc 1 165 5 is_stmt 1 view .LVU41
 165:Core/Src/main.c **** 
 161              		.loc 1 165 8 is_stmt 0 view .LVU42
 162 006c 08A8     		add	r0, sp, #32
 163 006e FFF7FEFF 		bl	HAL_RCC_OscConfig
 164              	.LVL2:
 165:Core/Src/main.c **** 
 165              		.loc 1 165 7 view .LVU43
 166 0072 80B9     		cbnz	r0, .L7
 169:Core/Src/main.c ****                                   RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 167              		.loc 1 169 5 is_stmt 1 view .LVU44
 169:Core/Src/main.c ****                                   RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 168              		.loc 1 169 33 is_stmt 0 view .LVU45
 169 0074 0F23     		movs	r3, #15
 170 0076 0393     		str	r3, [sp, #12]
 171:Core/Src/main.c ****     RCC_ClkInitStruct.AHBCLKDivider  = RCC_SYSCLK_DIV1;
 171              		.loc 1 171 5 is_stmt 1 view .LVU46
 171:Core/Src/main.c ****     RCC_ClkInitStruct.AHBCLKDivider  = RCC_SYSCLK_DIV1;
 172              		.loc 1 171 38 is_stmt 0 view .LVU47
 173 0078 0221     		movs	r1, #2
 174 007a 0491     		str	r1, [sp, #16]
 172:Core/Src/main.c ****     RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 175              		.loc 1 172 5 is_stmt 1 view .LVU48
 172:Core/Src/main.c ****     RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 176              		.loc 1 172 38 is_stmt 0 view .LVU49
 177 007c 0023     		movs	r3, #0
 178 007e 0593     		str	r3, [sp, #20]
 173:Core/Src/main.c ****     RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 179              		.loc 1 173 5 is_stmt 1 view .LVU50
 173:Core/Src/main.c ****     RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 180              		.loc 1 173 38 is_stmt 0 view .LVU51
 181 0080 4FF48052 		mov	r2, #4096
 182 0084 0692     		str	r2, [sp, #24]
 174:Core/Src/main.c **** 
 183              		.loc 1 174 5 is_stmt 1 view .LVU52
 174:Core/Src/main.c **** 
 184              		.loc 1 174 38 is_stmt 0 view .LVU53
 185 0086 0793     		str	r3, [sp, #28]
 176:Core/Src/main.c ****     {
 186              		.loc 1 176 5 is_stmt 1 view .LVU54
ARM GAS  /tmp/ccDZZQGG.s 			page 11


 176:Core/Src/main.c ****     {
 187              		.loc 1 176 8 is_stmt 0 view .LVU55
 188 0088 03A8     		add	r0, sp, #12
 189 008a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 190              	.LVL3:
 176:Core/Src/main.c ****     {
 191              		.loc 1 176 7 view .LVU56
 192 008e 20B9     		cbnz	r0, .L8
 180:Core/Src/main.c **** 
 193              		.loc 1 180 1 view .LVU57
 194 0090 15B0     		add	sp, sp, #84
 195              	.LCFI2:
 196              		.cfi_remember_state
 197              		.cfi_def_cfa_offset 4
 198              		@ sp needed
 199 0092 5DF804FB 		ldr	pc, [sp], #4
 200              	.L7:
 201              	.LCFI3:
 202              		.cfi_restore_state
 165:Core/Src/main.c **** 
 203              		.loc 1 165 59 is_stmt 1 discriminator 1 view .LVU58
 204 0096 FFF7FEFF 		bl	Error_Handler
 205              	.LVL4:
 206              	.L8:
 178:Core/Src/main.c ****     }
 207              		.loc 1 178 9 view .LVU59
 208 009a FFF7FEFF 		bl	Error_Handler
 209              	.LVL5:
 210              	.L10:
 211 009e 00BF     		.align	2
 212              	.L9:
 213 00a0 00380240 		.word	1073887232
 214 00a4 00700040 		.word	1073770496
 215              		.cfi_endproc
 216              	.LFE142:
 218              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 219              		.align	2
 220              	.LC0:
 221 0000 25640A00 		.ascii	"%d\012\000"
 222              		.section	.text.main,"ax",%progbits
 223              		.align	1
 224              		.global	main
 225              		.syntax unified
 226              		.thumb
 227              		.thumb_func
 229              	main:
 230              	.LFB141:
  74:Core/Src/main.c ****     /* USER CODE BEGIN 1 */
 231              		.loc 1 74 1 view -0
 232              		.cfi_startproc
 233              		@ args = 0, pretend = 0, frame = 136
 234              		@ frame_needed = 0, uses_anonymous_args = 0
 235 0000 10B5     		push	{r4, lr}
 236              	.LCFI4:
 237              		.cfi_def_cfa_offset 8
 238              		.cfi_offset 4, -8
 239              		.cfi_offset 14, -4
ARM GAS  /tmp/ccDZZQGG.s 			page 12


 240 0002 A2B0     		sub	sp, sp, #136
 241              	.LCFI5:
 242              		.cfi_def_cfa_offset 144
  84:Core/Src/main.c **** 
 243              		.loc 1 84 5 view .LVU61
 244 0004 FFF7FEFF 		bl	HAL_Init
 245              	.LVL6:
  91:Core/Src/main.c **** 
 246              		.loc 1 91 5 view .LVU62
 247 0008 FFF7FEFF 		bl	SystemClock_Config
 248              	.LVL7:
  98:Core/Src/main.c ****     MX_USART3_UART_Init();
 249              		.loc 1 98 5 view .LVU63
 250 000c FFF7FEFF 		bl	MX_GPIO_Init
 251              	.LVL8:
  99:Core/Src/main.c ****     MX_USB_OTG_FS_PCD_Init();
 252              		.loc 1 99 5 view .LVU64
 253 0010 FFF7FEFF 		bl	MX_USART3_UART_Init
 254              	.LVL9:
 100:Core/Src/main.c ****     MX_TIM1_Init();
 255              		.loc 1 100 5 view .LVU65
 256 0014 FFF7FEFF 		bl	MX_USB_OTG_FS_PCD_Init
 257              	.LVL10:
 101:Core/Src/main.c ****     /* USER CODE BEGIN 2 */
 258              		.loc 1 101 5 view .LVU66
 259 0018 FFF7FEFF 		bl	MX_TIM1_Init
 260              	.LVL11:
 104:Core/Src/main.c ****     STAILQ_INIT(&q);
 261              		.loc 1 104 5 view .LVU67
 105:Core/Src/main.c ****     struct foooo data[3] = { { .id = 1 }, { .id = 2 }, { .id = 3 } };
 262              		.loc 1 105 5 view .LVU68
 105:Core/Src/main.c ****     struct foooo data[3] = { { .id = 1 }, { .id = 2 }, { .id = 3 } };
 263              		.loc 1 105 5 view .LVU69
 264 001c 0023     		movs	r3, #0
 265 001e 2093     		str	r3, [sp, #128]
 105:Core/Src/main.c ****     struct foooo data[3] = { { .id = 1 }, { .id = 2 }, { .id = 3 } };
 266              		.loc 1 105 5 view .LVU70
 267 0020 20AA     		add	r2, sp, #128
 268 0022 2192     		str	r2, [sp, #132]
 105:Core/Src/main.c ****     struct foooo data[3] = { { .id = 1 }, { .id = 2 }, { .id = 3 } };
 269              		.loc 1 105 5 view .LVU71
 106:Core/Src/main.c **** 
 270              		.loc 1 106 5 view .LVU72
 106:Core/Src/main.c **** 
 271              		.loc 1 106 18 is_stmt 0 view .LVU73
 272 0024 1AAC     		add	r4, sp, #104
 273 0026 1A93     		str	r3, [sp, #104]
 274 0028 6360     		str	r3, [r4, #4]
 275 002a A360     		str	r3, [r4, #8]
 276 002c E360     		str	r3, [r4, #12]
 277 002e 2361     		str	r3, [r4, #16]
 278 0030 6361     		str	r3, [r4, #20]
 279 0032 0123     		movs	r3, #1
 280 0034 1A93     		str	r3, [sp, #104]
 281 0036 0223     		movs	r3, #2
 282 0038 1C93     		str	r3, [sp, #112]
 283 003a 0323     		movs	r3, #3
ARM GAS  /tmp/ccDZZQGG.s 			page 13


 284 003c 1E93     		str	r3, [sp, #120]
 108:Core/Src/main.c ****     STAILQ_INSERT_TAIL(&q, &data[1], stailq);
 285              		.loc 1 108 5 is_stmt 1 view .LVU74
 108:Core/Src/main.c ****     STAILQ_INSERT_TAIL(&q, &data[1], stailq);
 286              		.loc 1 108 5 view .LVU75
 108:Core/Src/main.c ****     STAILQ_INSERT_TAIL(&q, &data[1], stailq);
 287              		.loc 1 108 5 view .LVU76
 288 003e 2094     		str	r4, [sp, #128]
 108:Core/Src/main.c ****     STAILQ_INSERT_TAIL(&q, &data[1], stailq);
 289              		.loc 1 108 5 view .LVU77
 290 0040 1BAB     		add	r3, sp, #108
 291 0042 2193     		str	r3, [sp, #132]
 108:Core/Src/main.c ****     STAILQ_INSERT_TAIL(&q, &data[1], stailq);
 292              		.loc 1 108 5 view .LVU78
 109:Core/Src/main.c ****     STAILQ_INSERT_TAIL(&q, &data[2], stailq);
 293              		.loc 1 109 5 view .LVU79
 109:Core/Src/main.c ****     STAILQ_INSERT_TAIL(&q, &data[2], stailq);
 294              		.loc 1 109 5 view .LVU80
 109:Core/Src/main.c ****     STAILQ_INSERT_TAIL(&q, &data[2], stailq);
 295              		.loc 1 109 5 view .LVU81
 296 0044 1CAB     		add	r3, sp, #112
 297 0046 1B93     		str	r3, [sp, #108]
 109:Core/Src/main.c ****     STAILQ_INSERT_TAIL(&q, &data[2], stailq);
 298              		.loc 1 109 5 view .LVU82
 299 0048 1DAB     		add	r3, sp, #116
 300 004a 2193     		str	r3, [sp, #132]
 109:Core/Src/main.c ****     STAILQ_INSERT_TAIL(&q, &data[2], stailq);
 301              		.loc 1 109 5 view .LVU83
 110:Core/Src/main.c **** 
 302              		.loc 1 110 5 view .LVU84
 110:Core/Src/main.c **** 
 303              		.loc 1 110 5 view .LVU85
 110:Core/Src/main.c **** 
 304              		.loc 1 110 5 view .LVU86
 305 004c 1EAB     		add	r3, sp, #120
 306 004e 1D93     		str	r3, [sp, #116]
 110:Core/Src/main.c **** 
 307              		.loc 1 110 5 view .LVU87
 308 0050 1FAB     		add	r3, sp, #124
 309 0052 2193     		str	r3, [sp, #132]
 110:Core/Src/main.c **** 
 310              		.loc 1 110 5 view .LVU88
 112:Core/Src/main.c ****     char          buf[100];
 311              		.loc 1 112 5 view .LVU89
 113:Core/Src/main.c **** 
 312              		.loc 1 113 5 view .LVU90
 115:Core/Src/main.c ****     {
 313              		.loc 1 115 5 view .LVU91
 314              	.LVL12:
 115:Core/Src/main.c ****     {
 315              		.loc 1 115 5 is_stmt 0 view .LVU92
 316 0054 0EE0     		b	.L12
 317              	.L13:
 318              	.LBB8:
 117:Core/Src/main.c ****         HAL_UART_Transmit(&huart3, buf, strlen(buf), 10);
 319              		.loc 1 117 9 is_stmt 1 discriminator 3 view .LVU93
 320 0056 2268     		ldr	r2, [r4]
ARM GAS  /tmp/ccDZZQGG.s 			page 14


 321 0058 0B49     		ldr	r1, .L16
 322 005a 01A8     		add	r0, sp, #4
 323 005c FFF7FEFF 		bl	sprintf
 324              	.LVL13:
 118:Core/Src/main.c ****     }
 325              		.loc 1 118 9 discriminator 3 view .LVU94
 118:Core/Src/main.c ****     }
 326              		.loc 1 118 41 is_stmt 0 discriminator 3 view .LVU95
 327 0060 01A8     		add	r0, sp, #4
 328 0062 FFF7FEFF 		bl	strlen
 329              	.LVL14:
 118:Core/Src/main.c ****     }
 330              		.loc 1 118 9 discriminator 3 view .LVU96
 331 0066 0A23     		movs	r3, #10
 332 0068 82B2     		uxth	r2, r0
 333 006a 01A9     		add	r1, sp, #4
 334 006c 0748     		ldr	r0, .L16+4
 335 006e FFF7FEFF 		bl	HAL_UART_Transmit
 336              	.LVL15:
 337              	.LBE8:
 115:Core/Src/main.c ****     {
 338              		.loc 1 115 5 is_stmt 1 discriminator 3 view .LVU97
 339 0072 6468     		ldr	r4, [r4, #4]
 340              	.LVL16:
 341              	.L12:
 115:Core/Src/main.c ****     {
 342              		.loc 1 115 5 discriminator 1 view .LVU98
 343 0074 002C     		cmp	r4, #0
 344 0076 EED1     		bne	.L13
 345              	.L14:
 124:Core/Src/main.c ****     {
 346              		.loc 1 124 5 discriminator 1 view .LVU99
 126:Core/Src/main.c ****         HAL_GPIO_TogglePin(LD2_GPIO_Port, LD2_Pin);
 347              		.loc 1 126 9 discriminator 1 view .LVU100
 348 0078 6420     		movs	r0, #100
 349 007a FFF7FEFF 		bl	HAL_Delay
 350              	.LVL17:
 127:Core/Src/main.c ****         /* USER CODE END WHILE */
 351              		.loc 1 127 9 discriminator 1 view .LVU101
 352 007e 8021     		movs	r1, #128
 353 0080 0348     		ldr	r0, .L16+8
 354 0082 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 355              	.LVL18:
 124:Core/Src/main.c ****     {
 356              		.loc 1 124 10 discriminator 1 view .LVU102
 357 0086 F7E7     		b	.L14
 358              	.L17:
 359              		.align	2
 360              	.L16:
 361 0088 00000000 		.word	.LC0
 362 008c 00000000 		.word	huart3
 363 0090 00040240 		.word	1073873920
 364              		.cfi_endproc
 365              	.LFE141:
 367              		.text
 368              	.Letext0:
 369              		.file 3 "/usr/share/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/machine/_default_types.h"
ARM GAS  /tmp/ccDZZQGG.s 			page 15


 370              		.file 4 "/usr/share/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/sys/_stdint.h"
 371              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 372              		.file 6 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 373              		.file 7 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc_ex.h"
 374              		.file 8 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc.h"
 375              		.file 9 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 376              		.file 10 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_uart.h"
 377              		.file 11 "<built-in>"
 378              		.file 12 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_pwr.h"
 379              		.file 13 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
 380              		.file 14 "Core/Inc/gpio.h"
 381              		.file 15 "Core/Inc/usart.h"
 382              		.file 16 "Core/Inc/usb_otg.h"
 383              		.file 17 "Core/Inc/tim.h"
 384              		.file 18 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_gpio.h"
ARM GAS  /tmp/ccDZZQGG.s 			page 16


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccDZZQGG.s:20     .text.Error_Handler:0000000000000000 $t
     /tmp/ccDZZQGG.s:26     .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccDZZQGG.s:59     .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccDZZQGG.s:65     .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccDZZQGG.s:213    .text.SystemClock_Config:00000000000000a0 $d
     /tmp/ccDZZQGG.s:219    .rodata.main.str1.4:0000000000000000 $d
     /tmp/ccDZZQGG.s:223    .text.main:0000000000000000 $t
     /tmp/ccDZZQGG.s:229    .text.main:0000000000000000 main
     /tmp/ccDZZQGG.s:361    .text.main:0000000000000088 $d

UNDEFINED SYMBOLS
memset
HAL_PWR_EnableBkUpAccess
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_USART3_UART_Init
MX_USB_OTG_FS_PCD_Init
MX_TIM1_Init
sprintf
strlen
HAL_UART_Transmit
HAL_Delay
HAL_GPIO_TogglePin
huart3
