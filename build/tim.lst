ARM GAS  /tmp/ccg2Px9H.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"tim.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.HAL_TIM_PWM_MspInit,"ax",%progbits
  20              		.align	1
  21              		.global	HAL_TIM_PWM_MspInit
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	HAL_TIM_PWM_MspInit:
  27              	.LVL0:
  28              	.LFB142:
  29              		.file 1 "Core/Src/tim.c"
   1:Core/Src/tim.c **** /* USER CODE BEGIN Header */
   2:Core/Src/tim.c **** /**
   3:Core/Src/tim.c ****   ******************************************************************************
   4:Core/Src/tim.c ****   * @file    tim.c
   5:Core/Src/tim.c ****   * @brief   This file provides code for the configuration
   6:Core/Src/tim.c ****   *          of the TIM instances.
   7:Core/Src/tim.c ****   ******************************************************************************
   8:Core/Src/tim.c ****   * @attention
   9:Core/Src/tim.c ****   *
  10:Core/Src/tim.c ****   * Copyright (c) 2022 STMicroelectronics.
  11:Core/Src/tim.c ****   * All rights reserved.
  12:Core/Src/tim.c ****   *
  13:Core/Src/tim.c ****   * This software is licensed under terms that can be found in the LICENSE file
  14:Core/Src/tim.c ****   * in the root directory of this software component.
  15:Core/Src/tim.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  16:Core/Src/tim.c ****   *
  17:Core/Src/tim.c ****   ******************************************************************************
  18:Core/Src/tim.c ****   */
  19:Core/Src/tim.c **** /* USER CODE END Header */
  20:Core/Src/tim.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/tim.c **** #include "tim.h"
  22:Core/Src/tim.c **** 
  23:Core/Src/tim.c **** /* USER CODE BEGIN 0 */
  24:Core/Src/tim.c **** 
  25:Core/Src/tim.c **** /* USER CODE END 0 */
  26:Core/Src/tim.c **** 
  27:Core/Src/tim.c **** TIM_HandleTypeDef htim1;
  28:Core/Src/tim.c **** 
  29:Core/Src/tim.c **** /* TIM1 init function */
ARM GAS  /tmp/ccg2Px9H.s 			page 2


  30:Core/Src/tim.c **** void MX_TIM1_Init(void)
  31:Core/Src/tim.c **** {
  32:Core/Src/tim.c **** 
  33:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_Init 0 */
  34:Core/Src/tim.c **** 
  35:Core/Src/tim.c ****   /* USER CODE END TIM1_Init 0 */
  36:Core/Src/tim.c **** 
  37:Core/Src/tim.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
  38:Core/Src/tim.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
  39:Core/Src/tim.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
  40:Core/Src/tim.c **** 
  41:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_Init 1 */
  42:Core/Src/tim.c **** 
  43:Core/Src/tim.c ****   /* USER CODE END TIM1_Init 1 */
  44:Core/Src/tim.c ****   htim1.Instance = TIM1;
  45:Core/Src/tim.c ****   htim1.Init.Prescaler = 0;
  46:Core/Src/tim.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
  47:Core/Src/tim.c ****   htim1.Init.Period = 65535;
  48:Core/Src/tim.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
  49:Core/Src/tim.c ****   htim1.Init.RepetitionCounter = 0;
  50:Core/Src/tim.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
  51:Core/Src/tim.c ****   if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
  52:Core/Src/tim.c ****   {
  53:Core/Src/tim.c ****     Error_Handler();
  54:Core/Src/tim.c ****   }
  55:Core/Src/tim.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
  56:Core/Src/tim.c ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
  57:Core/Src/tim.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
  58:Core/Src/tim.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
  59:Core/Src/tim.c ****   {
  60:Core/Src/tim.c ****     Error_Handler();
  61:Core/Src/tim.c ****   }
  62:Core/Src/tim.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
  63:Core/Src/tim.c ****   sConfigOC.Pulse = 0;
  64:Core/Src/tim.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
  65:Core/Src/tim.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
  66:Core/Src/tim.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
  67:Core/Src/tim.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
  68:Core/Src/tim.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
  69:Core/Src/tim.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
  70:Core/Src/tim.c ****   {
  71:Core/Src/tim.c ****     Error_Handler();
  72:Core/Src/tim.c ****   }
  73:Core/Src/tim.c ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
  74:Core/Src/tim.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
  75:Core/Src/tim.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
  76:Core/Src/tim.c ****   sBreakDeadTimeConfig.DeadTime = 0;
  77:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
  78:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
  79:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakFilter = 0;
  80:Core/Src/tim.c ****   sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
  81:Core/Src/tim.c ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
  82:Core/Src/tim.c ****   sBreakDeadTimeConfig.Break2Filter = 0;
  83:Core/Src/tim.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
  84:Core/Src/tim.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
  85:Core/Src/tim.c ****   {
  86:Core/Src/tim.c ****     Error_Handler();
ARM GAS  /tmp/ccg2Px9H.s 			page 3


  87:Core/Src/tim.c ****   }
  88:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_Init 2 */
  89:Core/Src/tim.c **** 
  90:Core/Src/tim.c ****   /* USER CODE END TIM1_Init 2 */
  91:Core/Src/tim.c ****   HAL_TIM_MspPostInit(&htim1);
  92:Core/Src/tim.c **** 
  93:Core/Src/tim.c **** }
  94:Core/Src/tim.c **** 
  95:Core/Src/tim.c **** void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef* tim_pwmHandle)
  96:Core/Src/tim.c **** {
  30              		.loc 1 96 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 8
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  97:Core/Src/tim.c **** 
  98:Core/Src/tim.c ****   if(tim_pwmHandle->Instance==TIM1)
  35              		.loc 1 98 3 view .LVU1
  36              		.loc 1 98 19 is_stmt 0 view .LVU2
  37 0000 0268     		ldr	r2, [r0]
  38              		.loc 1 98 5 view .LVU3
  39 0002 094B     		ldr	r3, .L8
  40 0004 9A42     		cmp	r2, r3
  41 0006 00D0     		beq	.L7
  42 0008 7047     		bx	lr
  43              	.L7:
  96:Core/Src/tim.c **** 
  44              		.loc 1 96 1 view .LVU4
  45 000a 82B0     		sub	sp, sp, #8
  46              	.LCFI0:
  47              		.cfi_def_cfa_offset 8
  99:Core/Src/tim.c ****   {
 100:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspInit 0 */
 101:Core/Src/tim.c **** 
 102:Core/Src/tim.c ****   /* USER CODE END TIM1_MspInit 0 */
 103:Core/Src/tim.c ****     /* TIM1 clock enable */
 104:Core/Src/tim.c ****     __HAL_RCC_TIM1_CLK_ENABLE();
  48              		.loc 1 104 5 is_stmt 1 view .LVU5
  49              	.LBB2:
  50              		.loc 1 104 5 view .LVU6
  51              		.loc 1 104 5 view .LVU7
  52 000c 03F59C33 		add	r3, r3, #79872
  53 0010 5A6C     		ldr	r2, [r3, #68]
  54 0012 42F00102 		orr	r2, r2, #1
  55 0016 5A64     		str	r2, [r3, #68]
  56              		.loc 1 104 5 view .LVU8
  57 0018 5B6C     		ldr	r3, [r3, #68]
  58 001a 03F00103 		and	r3, r3, #1
  59 001e 0193     		str	r3, [sp, #4]
  60              		.loc 1 104 5 view .LVU9
  61 0020 019B     		ldr	r3, [sp, #4]
  62              	.LBE2:
  63              		.loc 1 104 5 view .LVU10
 105:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspInit 1 */
 106:Core/Src/tim.c **** 
 107:Core/Src/tim.c ****   /* USER CODE END TIM1_MspInit 1 */
 108:Core/Src/tim.c ****   }
ARM GAS  /tmp/ccg2Px9H.s 			page 4


 109:Core/Src/tim.c **** }
  64              		.loc 1 109 1 is_stmt 0 view .LVU11
  65 0022 02B0     		add	sp, sp, #8
  66              	.LCFI1:
  67              		.cfi_def_cfa_offset 0
  68              		@ sp needed
  69 0024 7047     		bx	lr
  70              	.L9:
  71 0026 00BF     		.align	2
  72              	.L8:
  73 0028 00000140 		.word	1073807360
  74              		.cfi_endproc
  75              	.LFE142:
  77              		.section	.text.HAL_TIM_MspPostInit,"ax",%progbits
  78              		.align	1
  79              		.global	HAL_TIM_MspPostInit
  80              		.syntax unified
  81              		.thumb
  82              		.thumb_func
  84              	HAL_TIM_MspPostInit:
  85              	.LVL1:
  86              	.LFB143:
 110:Core/Src/tim.c **** void HAL_TIM_MspPostInit(TIM_HandleTypeDef* timHandle)
 111:Core/Src/tim.c **** {
  87              		.loc 1 111 1 is_stmt 1 view -0
  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 24
  90              		@ frame_needed = 0, uses_anonymous_args = 0
  91              		.loc 1 111 1 is_stmt 0 view .LVU13
  92 0000 00B5     		push	{lr}
  93              	.LCFI2:
  94              		.cfi_def_cfa_offset 4
  95              		.cfi_offset 14, -4
  96 0002 87B0     		sub	sp, sp, #28
  97              	.LCFI3:
  98              		.cfi_def_cfa_offset 32
 112:Core/Src/tim.c **** 
 113:Core/Src/tim.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  99              		.loc 1 113 3 is_stmt 1 view .LVU14
 100              		.loc 1 113 20 is_stmt 0 view .LVU15
 101 0004 0023     		movs	r3, #0
 102 0006 0193     		str	r3, [sp, #4]
 103 0008 0293     		str	r3, [sp, #8]
 104 000a 0393     		str	r3, [sp, #12]
 105 000c 0493     		str	r3, [sp, #16]
 106 000e 0593     		str	r3, [sp, #20]
 114:Core/Src/tim.c ****   if(timHandle->Instance==TIM1)
 107              		.loc 1 114 3 is_stmt 1 view .LVU16
 108              		.loc 1 114 15 is_stmt 0 view .LVU17
 109 0010 0268     		ldr	r2, [r0]
 110              		.loc 1 114 5 view .LVU18
 111 0012 0E4B     		ldr	r3, .L14
 112 0014 9A42     		cmp	r2, r3
 113 0016 02D0     		beq	.L13
 114              	.LVL2:
 115              	.L10:
 115:Core/Src/tim.c ****   {
ARM GAS  /tmp/ccg2Px9H.s 			page 5


 116:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspPostInit 0 */
 117:Core/Src/tim.c **** 
 118:Core/Src/tim.c ****   /* USER CODE END TIM1_MspPostInit 0 */
 119:Core/Src/tim.c **** 
 120:Core/Src/tim.c ****     __HAL_RCC_GPIOE_CLK_ENABLE();
 121:Core/Src/tim.c ****     /**TIM1 GPIO Configuration
 122:Core/Src/tim.c ****     PE9     ------> TIM1_CH1
 123:Core/Src/tim.c ****     */
 124:Core/Src/tim.c ****     GPIO_InitStruct.Pin = GPIO_PIN_9;
 125:Core/Src/tim.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 126:Core/Src/tim.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 127:Core/Src/tim.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 128:Core/Src/tim.c ****     GPIO_InitStruct.Alternate = GPIO_AF1_TIM1;
 129:Core/Src/tim.c ****     HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 130:Core/Src/tim.c **** 
 131:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspPostInit 1 */
 132:Core/Src/tim.c **** 
 133:Core/Src/tim.c ****   /* USER CODE END TIM1_MspPostInit 1 */
 134:Core/Src/tim.c ****   }
 135:Core/Src/tim.c **** 
 136:Core/Src/tim.c **** }
 116              		.loc 1 136 1 view .LVU19
 117 0018 07B0     		add	sp, sp, #28
 118              	.LCFI4:
 119              		.cfi_remember_state
 120              		.cfi_def_cfa_offset 4
 121              		@ sp needed
 122 001a 5DF804FB 		ldr	pc, [sp], #4
 123              	.LVL3:
 124              	.L13:
 125              	.LCFI5:
 126              		.cfi_restore_state
 120:Core/Src/tim.c ****     /**TIM1 GPIO Configuration
 127              		.loc 1 120 5 is_stmt 1 view .LVU20
 128              	.LBB3:
 120:Core/Src/tim.c ****     /**TIM1 GPIO Configuration
 129              		.loc 1 120 5 view .LVU21
 120:Core/Src/tim.c ****     /**TIM1 GPIO Configuration
 130              		.loc 1 120 5 view .LVU22
 131 001e 03F59C33 		add	r3, r3, #79872
 132 0022 1A6B     		ldr	r2, [r3, #48]
 133 0024 42F01002 		orr	r2, r2, #16
 134 0028 1A63     		str	r2, [r3, #48]
 120:Core/Src/tim.c ****     /**TIM1 GPIO Configuration
 135              		.loc 1 120 5 view .LVU23
 136 002a 1B6B     		ldr	r3, [r3, #48]
 137 002c 03F01003 		and	r3, r3, #16
 138 0030 0093     		str	r3, [sp]
 120:Core/Src/tim.c ****     /**TIM1 GPIO Configuration
 139              		.loc 1 120 5 view .LVU24
 140 0032 009B     		ldr	r3, [sp]
 141              	.LBE3:
 120:Core/Src/tim.c ****     /**TIM1 GPIO Configuration
 142              		.loc 1 120 5 view .LVU25
 124:Core/Src/tim.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 143              		.loc 1 124 5 view .LVU26
 124:Core/Src/tim.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
ARM GAS  /tmp/ccg2Px9H.s 			page 6


 144              		.loc 1 124 25 is_stmt 0 view .LVU27
 145 0034 4FF40073 		mov	r3, #512
 146 0038 0193     		str	r3, [sp, #4]
 125:Core/Src/tim.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 147              		.loc 1 125 5 is_stmt 1 view .LVU28
 125:Core/Src/tim.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 148              		.loc 1 125 26 is_stmt 0 view .LVU29
 149 003a 0223     		movs	r3, #2
 150 003c 0293     		str	r3, [sp, #8]
 126:Core/Src/tim.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 151              		.loc 1 126 5 is_stmt 1 view .LVU30
 127:Core/Src/tim.c ****     GPIO_InitStruct.Alternate = GPIO_AF1_TIM1;
 152              		.loc 1 127 5 view .LVU31
 128:Core/Src/tim.c ****     HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 153              		.loc 1 128 5 view .LVU32
 128:Core/Src/tim.c ****     HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 154              		.loc 1 128 31 is_stmt 0 view .LVU33
 155 003e 0123     		movs	r3, #1
 156 0040 0593     		str	r3, [sp, #20]
 129:Core/Src/tim.c **** 
 157              		.loc 1 129 5 is_stmt 1 view .LVU34
 158 0042 01A9     		add	r1, sp, #4
 159 0044 0248     		ldr	r0, .L14+4
 160              	.LVL4:
 129:Core/Src/tim.c **** 
 161              		.loc 1 129 5 is_stmt 0 view .LVU35
 162 0046 FFF7FEFF 		bl	HAL_GPIO_Init
 163              	.LVL5:
 164              		.loc 1 136 1 view .LVU36
 165 004a E5E7     		b	.L10
 166              	.L15:
 167              		.align	2
 168              	.L14:
 169 004c 00000140 		.word	1073807360
 170 0050 00100240 		.word	1073876992
 171              		.cfi_endproc
 172              	.LFE143:
 174              		.section	.text.MX_TIM1_Init,"ax",%progbits
 175              		.align	1
 176              		.global	MX_TIM1_Init
 177              		.syntax unified
 178              		.thumb
 179              		.thumb_func
 181              	MX_TIM1_Init:
 182              	.LFB141:
  31:Core/Src/tim.c **** 
 183              		.loc 1 31 1 is_stmt 1 view -0
 184              		.cfi_startproc
 185              		@ args = 0, pretend = 0, frame = 88
 186              		@ frame_needed = 0, uses_anonymous_args = 0
 187 0000 10B5     		push	{r4, lr}
 188              	.LCFI6:
 189              		.cfi_def_cfa_offset 8
 190              		.cfi_offset 4, -8
 191              		.cfi_offset 14, -4
 192 0002 96B0     		sub	sp, sp, #88
 193              	.LCFI7:
ARM GAS  /tmp/ccg2Px9H.s 			page 7


 194              		.cfi_def_cfa_offset 96
  37:Core/Src/tim.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 195              		.loc 1 37 3 view .LVU38
  37:Core/Src/tim.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 196              		.loc 1 37 27 is_stmt 0 view .LVU39
 197 0004 0024     		movs	r4, #0
 198 0006 1394     		str	r4, [sp, #76]
 199 0008 1494     		str	r4, [sp, #80]
 200 000a 1594     		str	r4, [sp, #84]
  38:Core/Src/tim.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 201              		.loc 1 38 3 is_stmt 1 view .LVU40
  38:Core/Src/tim.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 202              		.loc 1 38 22 is_stmt 0 view .LVU41
 203 000c 0C94     		str	r4, [sp, #48]
 204 000e 0D94     		str	r4, [sp, #52]
 205 0010 0E94     		str	r4, [sp, #56]
 206 0012 0F94     		str	r4, [sp, #60]
 207 0014 1094     		str	r4, [sp, #64]
 208 0016 1194     		str	r4, [sp, #68]
 209 0018 1294     		str	r4, [sp, #72]
  39:Core/Src/tim.c **** 
 210              		.loc 1 39 3 is_stmt 1 view .LVU42
  39:Core/Src/tim.c **** 
 211              		.loc 1 39 34 is_stmt 0 view .LVU43
 212 001a 2C22     		movs	r2, #44
 213 001c 2146     		mov	r1, r4
 214 001e 01A8     		add	r0, sp, #4
 215 0020 FFF7FEFF 		bl	memset
 216              	.LVL6:
  44:Core/Src/tim.c ****   htim1.Init.Prescaler = 0;
 217              		.loc 1 44 3 is_stmt 1 view .LVU44
  44:Core/Src/tim.c ****   htim1.Init.Prescaler = 0;
 218              		.loc 1 44 18 is_stmt 0 view .LVU45
 219 0024 2648     		ldr	r0, .L26
 220 0026 274B     		ldr	r3, .L26+4
 221 0028 0360     		str	r3, [r0]
  45:Core/Src/tim.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 222              		.loc 1 45 3 is_stmt 1 view .LVU46
  45:Core/Src/tim.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 223              		.loc 1 45 24 is_stmt 0 view .LVU47
 224 002a 4460     		str	r4, [r0, #4]
  46:Core/Src/tim.c ****   htim1.Init.Period = 65535;
 225              		.loc 1 46 3 is_stmt 1 view .LVU48
  46:Core/Src/tim.c ****   htim1.Init.Period = 65535;
 226              		.loc 1 46 26 is_stmt 0 view .LVU49
 227 002c 8460     		str	r4, [r0, #8]
  47:Core/Src/tim.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 228              		.loc 1 47 3 is_stmt 1 view .LVU50
  47:Core/Src/tim.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 229              		.loc 1 47 21 is_stmt 0 view .LVU51
 230 002e 4FF6FF73 		movw	r3, #65535
 231 0032 C360     		str	r3, [r0, #12]
  48:Core/Src/tim.c ****   htim1.Init.RepetitionCounter = 0;
 232              		.loc 1 48 3 is_stmt 1 view .LVU52
  48:Core/Src/tim.c ****   htim1.Init.RepetitionCounter = 0;
 233              		.loc 1 48 28 is_stmt 0 view .LVU53
 234 0034 0461     		str	r4, [r0, #16]
ARM GAS  /tmp/ccg2Px9H.s 			page 8


  49:Core/Src/tim.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 235              		.loc 1 49 3 is_stmt 1 view .LVU54
  49:Core/Src/tim.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 236              		.loc 1 49 32 is_stmt 0 view .LVU55
 237 0036 4461     		str	r4, [r0, #20]
  50:Core/Src/tim.c ****   if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 238              		.loc 1 50 3 is_stmt 1 view .LVU56
  50:Core/Src/tim.c ****   if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 239              		.loc 1 50 32 is_stmt 0 view .LVU57
 240 0038 8461     		str	r4, [r0, #24]
  51:Core/Src/tim.c ****   {
 241              		.loc 1 51 3 is_stmt 1 view .LVU58
  51:Core/Src/tim.c ****   {
 242              		.loc 1 51 7 is_stmt 0 view .LVU59
 243 003a FFF7FEFF 		bl	HAL_TIM_PWM_Init
 244              	.LVL7:
  51:Core/Src/tim.c ****   {
 245              		.loc 1 51 6 view .LVU60
 246 003e 0028     		cmp	r0, #0
 247 0040 31D1     		bne	.L22
 248              	.L17:
  55:Core/Src/tim.c ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 249              		.loc 1 55 3 is_stmt 1 view .LVU61
  55:Core/Src/tim.c ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 250              		.loc 1 55 37 is_stmt 0 view .LVU62
 251 0042 0023     		movs	r3, #0
 252 0044 1393     		str	r3, [sp, #76]
  56:Core/Src/tim.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 253              		.loc 1 56 3 is_stmt 1 view .LVU63
  56:Core/Src/tim.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 254              		.loc 1 56 38 is_stmt 0 view .LVU64
 255 0046 1493     		str	r3, [sp, #80]
  57:Core/Src/tim.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 256              		.loc 1 57 3 is_stmt 1 view .LVU65
  57:Core/Src/tim.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 257              		.loc 1 57 33 is_stmt 0 view .LVU66
 258 0048 1593     		str	r3, [sp, #84]
  58:Core/Src/tim.c ****   {
 259              		.loc 1 58 3 is_stmt 1 view .LVU67
  58:Core/Src/tim.c ****   {
 260              		.loc 1 58 7 is_stmt 0 view .LVU68
 261 004a 13A9     		add	r1, sp, #76
 262 004c 1C48     		ldr	r0, .L26
 263 004e FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 264              	.LVL8:
  58:Core/Src/tim.c ****   {
 265              		.loc 1 58 6 view .LVU69
 266 0052 0028     		cmp	r0, #0
 267 0054 2AD1     		bne	.L23
 268              	.L18:
  62:Core/Src/tim.c ****   sConfigOC.Pulse = 0;
 269              		.loc 1 62 3 is_stmt 1 view .LVU70
  62:Core/Src/tim.c ****   sConfigOC.Pulse = 0;
 270              		.loc 1 62 20 is_stmt 0 view .LVU71
 271 0056 6023     		movs	r3, #96
 272 0058 0C93     		str	r3, [sp, #48]
  63:Core/Src/tim.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
ARM GAS  /tmp/ccg2Px9H.s 			page 9


 273              		.loc 1 63 3 is_stmt 1 view .LVU72
  63:Core/Src/tim.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 274              		.loc 1 63 19 is_stmt 0 view .LVU73
 275 005a 0022     		movs	r2, #0
 276 005c 0D92     		str	r2, [sp, #52]
  64:Core/Src/tim.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 277              		.loc 1 64 3 is_stmt 1 view .LVU74
  64:Core/Src/tim.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 278              		.loc 1 64 24 is_stmt 0 view .LVU75
 279 005e 0E92     		str	r2, [sp, #56]
  65:Core/Src/tim.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 280              		.loc 1 65 3 is_stmt 1 view .LVU76
  65:Core/Src/tim.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 281              		.loc 1 65 25 is_stmt 0 view .LVU77
 282 0060 0F92     		str	r2, [sp, #60]
  66:Core/Src/tim.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 283              		.loc 1 66 3 is_stmt 1 view .LVU78
  66:Core/Src/tim.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 284              		.loc 1 66 24 is_stmt 0 view .LVU79
 285 0062 1092     		str	r2, [sp, #64]
  67:Core/Src/tim.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 286              		.loc 1 67 3 is_stmt 1 view .LVU80
  67:Core/Src/tim.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 287              		.loc 1 67 25 is_stmt 0 view .LVU81
 288 0064 1192     		str	r2, [sp, #68]
  68:Core/Src/tim.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 289              		.loc 1 68 3 is_stmt 1 view .LVU82
  68:Core/Src/tim.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 290              		.loc 1 68 26 is_stmt 0 view .LVU83
 291 0066 1292     		str	r2, [sp, #72]
  69:Core/Src/tim.c ****   {
 292              		.loc 1 69 3 is_stmt 1 view .LVU84
  69:Core/Src/tim.c ****   {
 293              		.loc 1 69 7 is_stmt 0 view .LVU85
 294 0068 0CA9     		add	r1, sp, #48
 295 006a 1548     		ldr	r0, .L26
 296 006c FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 297              	.LVL9:
  69:Core/Src/tim.c ****   {
 298              		.loc 1 69 6 view .LVU86
 299 0070 F8B9     		cbnz	r0, .L24
 300              	.L19:
  73:Core/Src/tim.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 301              		.loc 1 73 3 is_stmt 1 view .LVU87
  73:Core/Src/tim.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 302              		.loc 1 73 40 is_stmt 0 view .LVU88
 303 0072 0023     		movs	r3, #0
 304 0074 0193     		str	r3, [sp, #4]
  74:Core/Src/tim.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 305              		.loc 1 74 3 is_stmt 1 view .LVU89
  74:Core/Src/tim.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 306              		.loc 1 74 41 is_stmt 0 view .LVU90
 307 0076 0293     		str	r3, [sp, #8]
  75:Core/Src/tim.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 308              		.loc 1 75 3 is_stmt 1 view .LVU91
  75:Core/Src/tim.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 309              		.loc 1 75 34 is_stmt 0 view .LVU92
ARM GAS  /tmp/ccg2Px9H.s 			page 10


 310 0078 0393     		str	r3, [sp, #12]
  76:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 311              		.loc 1 76 3 is_stmt 1 view .LVU93
  76:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 312              		.loc 1 76 33 is_stmt 0 view .LVU94
 313 007a 0493     		str	r3, [sp, #16]
  77:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 314              		.loc 1 77 3 is_stmt 1 view .LVU95
  77:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 315              		.loc 1 77 35 is_stmt 0 view .LVU96
 316 007c 0593     		str	r3, [sp, #20]
  78:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakFilter = 0;
 317              		.loc 1 78 3 is_stmt 1 view .LVU97
  78:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakFilter = 0;
 318              		.loc 1 78 38 is_stmt 0 view .LVU98
 319 007e 4FF40052 		mov	r2, #8192
 320 0082 0692     		str	r2, [sp, #24]
  79:Core/Src/tim.c ****   sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 321              		.loc 1 79 3 is_stmt 1 view .LVU99
  79:Core/Src/tim.c ****   sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 322              		.loc 1 79 36 is_stmt 0 view .LVU100
 323 0084 0793     		str	r3, [sp, #28]
  80:Core/Src/tim.c ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 324              		.loc 1 80 3 is_stmt 1 view .LVU101
  80:Core/Src/tim.c ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 325              		.loc 1 80 36 is_stmt 0 view .LVU102
 326 0086 0893     		str	r3, [sp, #32]
  81:Core/Src/tim.c ****   sBreakDeadTimeConfig.Break2Filter = 0;
 327              		.loc 1 81 3 is_stmt 1 view .LVU103
  81:Core/Src/tim.c ****   sBreakDeadTimeConfig.Break2Filter = 0;
 328              		.loc 1 81 39 is_stmt 0 view .LVU104
 329 0088 4FF00072 		mov	r2, #33554432
 330 008c 0992     		str	r2, [sp, #36]
  82:Core/Src/tim.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 331              		.loc 1 82 3 is_stmt 1 view .LVU105
  82:Core/Src/tim.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 332              		.loc 1 82 37 is_stmt 0 view .LVU106
 333 008e 0A93     		str	r3, [sp, #40]
  83:Core/Src/tim.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 334              		.loc 1 83 3 is_stmt 1 view .LVU107
  83:Core/Src/tim.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 335              		.loc 1 83 40 is_stmt 0 view .LVU108
 336 0090 0B93     		str	r3, [sp, #44]
  84:Core/Src/tim.c ****   {
 337              		.loc 1 84 3 is_stmt 1 view .LVU109
  84:Core/Src/tim.c ****   {
 338              		.loc 1 84 7 is_stmt 0 view .LVU110
 339 0092 01A9     		add	r1, sp, #4
 340 0094 0A48     		ldr	r0, .L26
 341 0096 FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 342              	.LVL10:
  84:Core/Src/tim.c ****   {
 343              		.loc 1 84 6 view .LVU111
 344 009a 68B9     		cbnz	r0, .L25
 345              	.L20:
  91:Core/Src/tim.c **** 
 346              		.loc 1 91 3 is_stmt 1 view .LVU112
ARM GAS  /tmp/ccg2Px9H.s 			page 11


 347 009c 0848     		ldr	r0, .L26
 348 009e FFF7FEFF 		bl	HAL_TIM_MspPostInit
 349              	.LVL11:
  93:Core/Src/tim.c **** 
 350              		.loc 1 93 1 is_stmt 0 view .LVU113
 351 00a2 16B0     		add	sp, sp, #88
 352              	.LCFI8:
 353              		.cfi_remember_state
 354              		.cfi_def_cfa_offset 8
 355              		@ sp needed
 356 00a4 10BD     		pop	{r4, pc}
 357              	.L22:
 358              	.LCFI9:
 359              		.cfi_restore_state
  53:Core/Src/tim.c ****   }
 360              		.loc 1 53 5 is_stmt 1 view .LVU114
 361 00a6 FFF7FEFF 		bl	Error_Handler
 362              	.LVL12:
 363 00aa CAE7     		b	.L17
 364              	.L23:
  60:Core/Src/tim.c ****   }
 365              		.loc 1 60 5 view .LVU115
 366 00ac FFF7FEFF 		bl	Error_Handler
 367              	.LVL13:
 368 00b0 D1E7     		b	.L18
 369              	.L24:
  71:Core/Src/tim.c ****   }
 370              		.loc 1 71 5 view .LVU116
 371 00b2 FFF7FEFF 		bl	Error_Handler
 372              	.LVL14:
 373 00b6 DCE7     		b	.L19
 374              	.L25:
  86:Core/Src/tim.c ****   }
 375              		.loc 1 86 5 view .LVU117
 376 00b8 FFF7FEFF 		bl	Error_Handler
 377              	.LVL15:
 378 00bc EEE7     		b	.L20
 379              	.L27:
 380 00be 00BF     		.align	2
 381              	.L26:
 382 00c0 00000000 		.word	.LANCHOR0
 383 00c4 00000140 		.word	1073807360
 384              		.cfi_endproc
 385              	.LFE141:
 387              		.section	.text.HAL_TIM_PWM_MspDeInit,"ax",%progbits
 388              		.align	1
 389              		.global	HAL_TIM_PWM_MspDeInit
 390              		.syntax unified
 391              		.thumb
 392              		.thumb_func
 394              	HAL_TIM_PWM_MspDeInit:
 395              	.LVL16:
 396              	.LFB144:
 137:Core/Src/tim.c **** 
 138:Core/Src/tim.c **** void HAL_TIM_PWM_MspDeInit(TIM_HandleTypeDef* tim_pwmHandle)
 139:Core/Src/tim.c **** {
 397              		.loc 1 139 1 view -0
ARM GAS  /tmp/ccg2Px9H.s 			page 12


 398              		.cfi_startproc
 399              		@ args = 0, pretend = 0, frame = 0
 400              		@ frame_needed = 0, uses_anonymous_args = 0
 401              		@ link register save eliminated.
 140:Core/Src/tim.c **** 
 141:Core/Src/tim.c ****   if(tim_pwmHandle->Instance==TIM1)
 402              		.loc 1 141 3 view .LVU119
 403              		.loc 1 141 19 is_stmt 0 view .LVU120
 404 0000 0268     		ldr	r2, [r0]
 405              		.loc 1 141 5 view .LVU121
 406 0002 054B     		ldr	r3, .L31
 407 0004 9A42     		cmp	r2, r3
 408 0006 00D0     		beq	.L30
 409              	.L28:
 142:Core/Src/tim.c ****   {
 143:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspDeInit 0 */
 144:Core/Src/tim.c **** 
 145:Core/Src/tim.c ****   /* USER CODE END TIM1_MspDeInit 0 */
 146:Core/Src/tim.c ****     /* Peripheral clock disable */
 147:Core/Src/tim.c ****     __HAL_RCC_TIM1_CLK_DISABLE();
 148:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspDeInit 1 */
 149:Core/Src/tim.c **** 
 150:Core/Src/tim.c ****   /* USER CODE END TIM1_MspDeInit 1 */
 151:Core/Src/tim.c ****   }
 152:Core/Src/tim.c **** }
 410              		.loc 1 152 1 view .LVU122
 411 0008 7047     		bx	lr
 412              	.L30:
 147:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspDeInit 1 */
 413              		.loc 1 147 5 is_stmt 1 view .LVU123
 414 000a 044A     		ldr	r2, .L31+4
 415 000c 536C     		ldr	r3, [r2, #68]
 416 000e 23F00103 		bic	r3, r3, #1
 417 0012 5364     		str	r3, [r2, #68]
 418              		.loc 1 152 1 is_stmt 0 view .LVU124
 419 0014 F8E7     		b	.L28
 420              	.L32:
 421 0016 00BF     		.align	2
 422              	.L31:
 423 0018 00000140 		.word	1073807360
 424 001c 00380240 		.word	1073887232
 425              		.cfi_endproc
 426              	.LFE144:
 428              		.global	htim1
 429              		.section	.bss.htim1,"aw",%nobits
 430              		.align	2
 431              		.set	.LANCHOR0,. + 0
 434              	htim1:
 435 0000 00000000 		.space	188
 435      00000000 
 435      00000000 
 435      00000000 
 435      00000000 
 436              		.text
 437              	.Letext0:
 438              		.file 2 "/usr/share/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/machine/_default_types.h"
 439              		.file 3 "/usr/share/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/sys/_stdint.h"
ARM GAS  /tmp/ccg2Px9H.s 			page 13


 440              		.file 4 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 441              		.file 5 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 442              		.file 6 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_gpio.h"
 443              		.file 7 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 444              		.file 8 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_tim.h"
 445              		.file 9 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_tim_ex.h"
 446              		.file 10 "Core/Inc/main.h"
 447              		.file 11 "Core/Inc/tim.h"
 448              		.file 12 "<built-in>"
ARM GAS  /tmp/ccg2Px9H.s 			page 14


DEFINED SYMBOLS
                            *ABS*:0000000000000000 tim.c
     /tmp/ccg2Px9H.s:20     .text.HAL_TIM_PWM_MspInit:0000000000000000 $t
     /tmp/ccg2Px9H.s:26     .text.HAL_TIM_PWM_MspInit:0000000000000000 HAL_TIM_PWM_MspInit
     /tmp/ccg2Px9H.s:73     .text.HAL_TIM_PWM_MspInit:0000000000000028 $d
     /tmp/ccg2Px9H.s:78     .text.HAL_TIM_MspPostInit:0000000000000000 $t
     /tmp/ccg2Px9H.s:84     .text.HAL_TIM_MspPostInit:0000000000000000 HAL_TIM_MspPostInit
     /tmp/ccg2Px9H.s:169    .text.HAL_TIM_MspPostInit:000000000000004c $d
     /tmp/ccg2Px9H.s:175    .text.MX_TIM1_Init:0000000000000000 $t
     /tmp/ccg2Px9H.s:181    .text.MX_TIM1_Init:0000000000000000 MX_TIM1_Init
     /tmp/ccg2Px9H.s:382    .text.MX_TIM1_Init:00000000000000c0 $d
     /tmp/ccg2Px9H.s:388    .text.HAL_TIM_PWM_MspDeInit:0000000000000000 $t
     /tmp/ccg2Px9H.s:394    .text.HAL_TIM_PWM_MspDeInit:0000000000000000 HAL_TIM_PWM_MspDeInit
     /tmp/ccg2Px9H.s:423    .text.HAL_TIM_PWM_MspDeInit:0000000000000018 $d
     /tmp/ccg2Px9H.s:434    .bss.htim1:0000000000000000 htim1
     /tmp/ccg2Px9H.s:430    .bss.htim1:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_Init
memset
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIMEx_ConfigBreakDeadTime
Error_Handler
